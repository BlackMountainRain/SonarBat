# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/v1/auth/check-permission:
        post:
            tags:
                - Auth
            operationId: Auth_CheckPermission
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.auth.v1.CheckPermissionRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.auth.v1.PermissionReply'
    /api/v1/auth/request-password-reset:
        post:
            tags:
                - Auth
            operationId: Auth_RequestPasswordReset
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.auth.v1.RequestPasswordResetRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.auth.v1.RequestPasswordResetReply'
    /api/v1/auth/reset-password:
        post:
            tags:
                - Auth
            operationId: Auth_ResetPassword
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.auth.v1.ResetPasswordRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.auth.v1.ResetPasswordReply'
    /api/v1/auth/sign-in/oauth:
        post:
            tags:
                - Auth
            operationId: Auth_SignInWithOAuth
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.auth.v1.SignInWithOAuthRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.auth.v1.AuthReply'
    /api/v1/auth/sign-in/password:
        post:
            tags:
                - Auth
            operationId: Auth_SignIn
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.auth.v1.SignInRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.auth.v1.AuthReply'
    /api/v1/auth/sign-up:
        post:
            tags:
                - Auth
            operationId: Auth_SignUp
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.auth.v1.SignUpRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.auth.v1.AuthReply'
    /api/v1/auth/validate-jwt:
        post:
            tags:
                - Auth
            operationId: Auth_ValidateJWT
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.auth.v1.ValidateJWTRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.auth.v1.UserInfoReply'
    /api/v1/auth/verify-password-reset-token:
        get:
            tags:
                - Auth
            operationId: Auth_VerifyPasswordResetToken
            parameters:
                - name: token
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.auth.v1.VerifyPasswordResetTokenReply'
    /api/v1/tasks:
        get:
            tags:
                - Task
            operationId: Task_GetTasks
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.task.v1.GetTasksReply'
        post:
            tags:
                - Task
            operationId: Task_CreateTask
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.task.v1.CreateTaskRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.task.v1.CreateTaskReply'
    /api/v1/tasks/{id}:
        get:
            tags:
                - Task
            operationId: Task_GetTask
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.task.v1.GetTaskReply'
        put:
            tags:
                - Task
            operationId: Task_OverwriteTask
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.task.v1.OverwriteTaskRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.task.v1.OverwriteTaskReply'
        delete:
            tags:
                - Task
            operationId: Task_DeleteTask
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.task.v1.DeleteTaskReply'
        patch:
            tags:
                - Task
            operationId: Task_UpdateTask
            parameters:
                - name: id
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.task.v1.UpdateTaskRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.task.v1.UpdateTaskReply'
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
    /v1/tasks/{taskId}/subtasks:
        get:
            tags:
                - Subtask
            operationId: Subtask_GetSubtasks
            parameters:
                - name: taskId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.task.v1.GetSubtasksReply'
        post:
            tags:
                - Subtask
            operationId: Subtask_CreateSubtask
            parameters:
                - name: taskId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.task.v1.CreateSubtaskRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.task.v1.CreateSubtaskReply'
    /v1/tasks/{taskId}/subtasks/{subtaskId}:
        get:
            tags:
                - Subtask
            operationId: Subtask_GetSubtask
            parameters:
                - name: taskId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: subtaskId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.task.v1.GetSubtaskReply'
        put:
            tags:
                - Subtask
            operationId: Subtask_UpdateSubtask
            parameters:
                - name: taskId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: subtaskId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.task.v1.UpdateSubtaskRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.task.v1.UpdateSubtaskReply'
        delete:
            tags:
                - Subtask
            operationId: Subtask_DeleteSubtask
            parameters:
                - name: taskId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: subtaskId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.task.v1.DeleteSubtaskReply'
        patch:
            tags:
                - Subtask
            operationId: Subtask_OverwriteSubtask
            parameters:
                - name: taskId
                  in: path
                  required: true
                  schema:
                    type: string
                - name: subtaskId
                  in: path
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.task.v1.OverwriteSubtaskRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.task.v1.OverwriteSubtaskReply'
components:
    schemas:
        api.auth.v1.AuthReply:
            type: object
            properties:
                token:
                    type: string
        api.auth.v1.CheckPermissionRequest:
            type: object
            properties:
                jwt:
                    type: string
                role:
                    type: string
                obj:
                    type: string
                act:
                    type: string
                uri:
                    type: string
        api.auth.v1.PermissionReply:
            type: object
            properties:
                hasPermission:
                    type: boolean
        api.auth.v1.RequestPasswordResetReply:
            type: object
            properties:
                status:
                    type: string
        api.auth.v1.RequestPasswordResetRequest:
            type: object
            properties:
                email:
                    type: string
        api.auth.v1.ResetPasswordReply:
            type: object
            properties:
                status:
                    type: string
        api.auth.v1.ResetPasswordRequest:
            type: object
            properties:
                token:
                    type: string
                newPassword:
                    type: string
        api.auth.v1.SignInRequest:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
        api.auth.v1.SignInWithOAuthRequest:
            type: object
            properties:
                provider:
                    type: integer
                    format: enum
                code:
                    type: string
        api.auth.v1.SignUpRequest:
            type: object
            properties:
                email:
                    type: string
                password:
                    type: string
        api.auth.v1.UserInfoReply:
            type: object
            properties:
                username:
                    type: string
                email:
                    type: string
                additionalInfo:
                    type: object
                    additionalProperties:
                        type: string
        api.auth.v1.ValidateJWTRequest:
            type: object
            properties:
                jwt:
                    type: string
        api.auth.v1.VerifyPasswordResetTokenReply:
            type: object
            properties:
                valid:
                    type: boolean
        api.task.v1.CreateSubtaskReply:
            type: object
            properties:
                subtaskId:
                    type: string
        api.task.v1.CreateSubtaskRequest:
            type: object
            properties:
                taskId:
                    type: string
                status:
                    type: boolean
                detectionType:
                    type: integer
                    format: int32
                params:
                    type: string
                srcEpFilterStrategy:
                    type: string
                srcEpSelStrategy:
                    type: string
                srcEpSelNum:
                    type: integer
                    format: int32
                dstEpFilterStrategy:
                    type: string
                dstEpSelStrategy:
                    type: string
                dstEpSelNum:
                    type: integer
                    format: int32
        api.task.v1.CreateTaskReply:
            type: object
            properties:
                id:
                    type: string
        api.task.v1.CreateTaskRequest:
            type: object
            properties:
                status:
                    type: boolean
                name:
                    type: string
                comment:
                    type: string
        api.task.v1.DeleteSubtaskReply:
            type: object
            properties:
                rowsAffected:
                    type: integer
                    format: uint32
        api.task.v1.DeleteTaskReply:
            type: object
            properties:
                rowsAffected:
                    type: integer
                    format: uint32
        api.task.v1.GetSubtaskReply:
            type: object
            properties:
                subtaskId:
                    type: string
                status:
                    type: boolean
                detectionType:
                    type: integer
                    format: int32
                params:
                    type: string
                srcEpFilterStrategy:
                    type: string
                srcEpSelStrategy:
                    type: string
                srcEpSelNum:
                    type: integer
                    format: int32
                dstEpFilterStrategy:
                    type: string
                dstEpSelStrategy:
                    type: string
                dstEpSelNum:
                    type: integer
                    format: int32
                updatedBy:
                    type: string
                createdBy:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
        api.task.v1.GetSubtasksReply:
            type: object
            properties:
                subtasks:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.task.v1.SingleSubtask'
        api.task.v1.GetTaskReply:
            type: object
            properties:
                id:
                    type: string
                status:
                    type: boolean
                name:
                    type: string
                comment:
                    type: string
                updatedBy:
                    type: string
                createdBy:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
        api.task.v1.GetTasksReply:
            type: object
            properties:
                tasks:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.task.v1.SingleTask'
        api.task.v1.OverwriteSubtaskReply:
            type: object
            properties:
                rowsAffected:
                    type: integer
                    format: uint32
        api.task.v1.OverwriteSubtaskRequest:
            type: object
            properties:
                taskId:
                    type: string
                subtaskId:
                    type: string
                status:
                    type: boolean
                detectionType:
                    type: integer
                    format: int32
                params:
                    type: string
                srcEpFilterStrategy:
                    type: string
                srcEpSelStrategy:
                    type: string
                srcEpSelNum:
                    type: integer
                    format: int32
                dstEpFilterStrategy:
                    type: string
                dstEpSelStrategy:
                    type: string
                dstEpSelNum:
                    type: integer
                    format: int32
        api.task.v1.OverwriteTaskReply:
            type: object
            properties:
                rowsAffected:
                    type: integer
                    format: uint32
        api.task.v1.OverwriteTaskRequest:
            type: object
            properties:
                id:
                    type: string
                status:
                    type: boolean
                name:
                    type: string
                comment:
                    type: string
        api.task.v1.SingleSubtask:
            type: object
            properties:
                subtaskId:
                    type: string
                status:
                    type: boolean
                detectionType:
                    type: integer
                    format: int32
                params:
                    type: string
                srcEpFilterStrategy:
                    type: string
                srcEpSelStrategy:
                    type: string
                srcEpSelNum:
                    type: integer
                    format: int32
                dstEpFilterStrategy:
                    type: string
                dstEpSelStrategy:
                    type: string
                dstEpSelNum:
                    type: integer
                    format: int32
                updatedBy:
                    type: string
                createdBy:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
        api.task.v1.SingleTask:
            type: object
            properties:
                id:
                    type: string
                status:
                    type: boolean
                name:
                    type: string
                comment:
                    type: string
                updatedBy:
                    type: string
                createdBy:
                    type: string
                createdAt:
                    type: string
                updatedAt:
                    type: string
        api.task.v1.UpdateSubtaskReply:
            type: object
            properties:
                rowsAffected:
                    type: integer
                    format: uint32
        api.task.v1.UpdateSubtaskRequest:
            type: object
            properties:
                taskId:
                    type: string
                subtaskId:
                    type: string
                status:
                    type: boolean
                detectionType:
                    type: integer
                    format: int32
                params:
                    type: string
                srcEpFilterStrategy:
                    type: string
                srcEpSelStrategy:
                    type: string
                srcEpSelNum:
                    type: integer
                    format: int32
                dstEpFilterStrategy:
                    type: string
                dstEpSelStrategy:
                    type: string
                dstEpSelNum:
                    type: integer
                    format: int32
        api.task.v1.UpdateTaskReply:
            type: object
            properties:
                rowsAffected:
                    type: integer
                    format: uint32
        api.task.v1.UpdateTaskRequest:
            type: object
            properties:
                id:
                    type: string
                status:
                    type: boolean
                name:
                    type: string
                comment:
                    type: string
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
tags:
    - name: Auth
    - name: Greeter
      description: The greeting service definition.
    - name: Subtask
    - name: Task
